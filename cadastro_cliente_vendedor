OBSERVAÇÃO:::::::::::::::

FALTA IMPLEMENTAR O ID_MATRICULA, ESTOU PENSANDO NUMA FORMA DE GERAR ISSO AUTOMATICAMENTE DE FORMA SEQUENCIAL DE ACOROD COM OS REGISTROS, EXEMPLO O PRIMEIRO A SE REGISTRAR RECEBER O NUMERO 1 O SEGUNDO A SE REGISTRAR O NUMERO 2 E DAI POR DIANTE



void cadastro_cliente_vendedor() {

	// Variaveis locais da funcao

	char nome[30], endereco[80], genero[3], data_nascimento[30], email[50], telefone[20];
	double cpf, rg;


	// Funcao para abrir arquivo, nome do arquivo = fptr ( filepointer, mas pode ser usado qualquer nome, exemplo:" FILE* cadastrovendedor; ")
	FILE* fptr;

	fptr = fopen("cadastro_vendedor.txt", "a");

	if (fptr == NULL) {
		printf("lista de cadastro nao localizada");
		}
	// Testando se localizou o arquivo de texto.

	printf("Nome & sobrenome: ");
	gets(nome);

	printf("\nGenero: M ou F: ");
	gets(genero);

	printf("\nEndereco: ");
	gets(endereco);

	printf("\nCPF(apenas numeros): ");
	scanf("%lf", &cpf);

	printf("\nRG(apenas numeros): ");
	scanf("%lf", &rg);

	printf("\nData de nascimento(Dia/mes/ano): ");
	scanf("%s", &data_nascimento);

	printf("\nNumero de telefone: ");
	scanf("%s", &telefone);

	printf("\nEmail para contato: ");
	scanf("%s", email);

	// printf e scanf padrao, para pegar informacoes do usuario, gets é usado para conseguir ler uma string composta, exemplo caso seja necessario o nome completo da pessoa, ex: George Lucas Torres Coelho.
	// o scanf nao consegue captar o ' ' espaço, ele retorna um erro, por isso utilizo a funcao gets( getstring) e dentro basta digitar o nome da variavel.

	

	fprintf(fptr, "Nome: %s \nGenero: %s \nEndereco: %s \nCPF: %.0lf \nRG: %.0lf \nData de nascimento: %s \nN° de Telefone: %s \nEmail:  %s \n", nome, genero, endereco, cpf, rg, data_nascimento, telefone, email);
	fprintf(fptr, "\n\n");

	// Apenas printando todas as informaçoes que foram salvas nas variaveis para o arquivo de texto, para isso é utilizado o fprintf, seguida da seguinte syntax fprintf(nome do arquivo, "informacao a ser imprimida", variaveis a serem imprimidas);


	fclose(fptr);



}
